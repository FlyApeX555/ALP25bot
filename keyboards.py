from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

def get_main_keyboard():
    """–û—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞"""
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üéØ –í—ã–±—Ä–∞—Ç—å –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å")],
            [KeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"), KeyboardButton(text="‚ÑπÔ∏è –ú–æ—è –∑–∞–ø–∏—Å—å")],
            [KeyboardButton(text="üÜò –ü–æ–º–æ—â—å")]
        ],
        resize_keyboard=True
    )

def get_registration_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üì± –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True)],
            [KeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥")]
        ],
        resize_keyboard=True
    )

async def create_master_classes_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å–∞–º–∏"""
    from database import Database
    
    db = Database()
    classes = await db.get_master_classes()
    
    builder = InlineKeyboardBuilder()
    
    for mc_id, name, max_slots, used_slots in classes:
        is_full = used_slots >= max_slots
        emoji = "‚ùå" if is_full else "‚úÖ"
        slots_text = f"({used_slots}/{max_slots})"
        
        button_text = f"{emoji} {name} {slots_text}"
        callback_data = f"vote_{mc_id}" if not is_full else "full"
        
        if not is_full:
            builder.add(InlineKeyboardButton(
                text=button_text,
                callback_data=callback_data
            ))
        else:
            builder.add(InlineKeyboardButton(
                text=button_text,
                callback_data="full"
            ))
    
    builder.add(InlineKeyboardButton(
        text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫",
        callback_data="refresh"
    ))
    
    builder.adjust(1)  # –ü–æ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–µ –≤ —Ä—è–¥—É
    return builder.as_markup()
